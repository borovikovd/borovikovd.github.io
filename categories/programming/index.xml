<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Programming on Blog of Denis Borovikov</title><link>https://borovikovd.github.io/categories/programming/</link><description>Recent content in Programming on Blog of Denis Borovikov</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 19 Mar 2024 19:45:31 +0530</lastBuildDate><atom:link href="https://borovikovd.github.io/categories/programming/index.xml" rel="self" type="application/rss+xml"/><item><title>Code reviews best practices</title><link>https://borovikovd.github.io/posts/2024-03-19-code-reviews/</link><pubDate>Tue, 19 Mar 2024 19:45:31 +0530</pubDate><guid>https://borovikovd.github.io/posts/2024-03-19-code-reviews/</guid><description>First of all - why? Diving into the &amp;ldquo;why&amp;rdquo; of code reviews reveals three critical benefits:
Improve code quality: Code reviews rigorously scrutinize code for potential improvements, ensuring adherence to best practices and design principles. This process inherently raises the code&amp;rsquo;s caliber. Share knowledge: They act as a conduit for knowledge transfer, allowing developers to learn from one another. This collaborative environment not only enhances individual skill sets but also harmonizes team methodologies.</description></item></channel></rss>